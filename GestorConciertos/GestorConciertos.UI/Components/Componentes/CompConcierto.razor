@using GestorConciertos.Shared;
@using GestorConciertos.Shared.DataApi

@inject IConciertoData conciertoData;
@inject IConciertoCancionData conciertoCancionData;
@inject NotificationService NotificationService
@using Microsoft.JSInterop
@using System.Text.Json
@inject DialogService DialogService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<RadzenCard Variant="Variant.Filled" Style="max-width: 300px">
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem">
        <RadzenStack Gap="0">
            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Nombre</RadzenText>
            <RadzenText TextStyle="TextStyle.Body1"><b>@concierto?.Nombre</b></RadzenText>
            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Lugar</RadzenText>
            <RadzenText TextStyle="TextStyle.Body1"><b>@concierto?.Lugar</b></RadzenText>
            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Fecha</RadzenText>
            <RadzenText TextStyle="TextStyle.Body1"><b>@concierto?.Fecha</b></RadzenText>
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Left" Gap="20">   
                <div> 
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Es Ensayo</RadzenText>
                    <RadzenCheckBox  @bind-Value=@concierto.esEnsayo  Disabled="true" /> 
                </div>
                <div>
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Canciones</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@cantidadCanciones</b></RadzenText>             
                </div>
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>  
    <RadzenStack Gap="2">

    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Left" Gap="2">        
        <RadzenButton Icon="visibility" Click="Ver" />
        <RadzenButton Icon="edit" Click="Editar" />
        <RadzenButton Icon="delete" Click="Eliminar" IconColor="@Colors.Danger"/>
    </RadzenStack>
</RadzenCard> 


@code {


    [Parameter]
    public GestorConciertos.Shared.DataObject.Concierto concierto { get; set; }
    [Parameter]
    public EventCallback BorrarConcierto { get; set; }
    public int cantidadCanciones { get; set; }  

    bool value;
    override protected async Task OnInitializedAsync()
    {
        cantidadCanciones = conciertoCancionData.GetAllCancionesByIdConcierto(concierto.Id).Count;
        await base.OnInitializedAsync();
    }

    public async void Eliminar()
    {
        bool? result= await DialogService.Confirm("¿Estás seguro de que quieres eliminar el concierto?", "Eliminar Concierto", new ConfirmOptions() { OkButtonText = "Si", CancelButtonText = "No" });
        if (result.HasValue  && result.Value)
        { conciertoData.RemoveConcierto(concierto.Id);
            NotificationMessage notifyMessage = new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Eliminado el Concierto", Duration = 4000 };
            NotificationService.Notify(notifyMessage);
            await BorrarConcierto.InvokeAsync();
        }

    }

    public async void Editar()
    {
        Navigation.NavigateTo($"/editConcierto/{concierto.Id}");
    }

    public async void Ver()
    {
        Navigation.NavigateTo($"/Ver/{concierto.Id}");
    }
}

