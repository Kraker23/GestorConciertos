@page "/Calendario"
@using GestorConciertos.Shared
@using GestorConciertos.Services
@inject IConciertoData conciertoData
@inject NavigationManager Navigation


@if (conciertos != null && conciertos.Any())
{
    <label> Conciertos @conciertos.Count()</label>

                               <RadzenScheduler TItem="Appointment" Data=@appointments StartProperty="Start" EndProperty="End" style="height: auto;width:auto; "
                TextProperty="Text" SelectedIndex="1" AppointmentRender=@OnAppointmentRender >

        <RadzenMonthView />
        <RadzenYearPlannerView StartMonth="Month.January" />
        <RadzenYearTimelineView StartMonth="Month.January" />
        <RadzenYearView />
    </RadzenScheduler> 
}


@code {
    IList<Appointment> appointments = new List<Appointment>();

    public List<Concierto> conciertos { get; set; }

    protected override Task OnInitializedAsync()
    {
        conciertos = conciertoData.GetConciertos();
        foreach (Concierto concierto in conciertos)
        {
            var appointment = new Appointment { Start = concierto.Fecha, End = concierto.Fecha.AddHours(3), Text = concierto.Fullname ,tag=concierto};

            appointments.Add(appointment);
        }

        StateHasChanged();
        return base.OnInitializedAsync();
    }
    void OnAppointmentRender(SchedulerAppointmentRenderEventArgs<Appointment> args)
    {
        if (args.Data.tag.GetType()==typeof(Concierto))
        {
            Concierto concierto = (Concierto)args.Data.tag;
            if (concierto.esEnsayo)
            {
                args.Attributes["style"] = "background: blue";
            }
            else
            {
                args.Attributes["style"] = "background: green";
            }
        }
    }

    
   

}

